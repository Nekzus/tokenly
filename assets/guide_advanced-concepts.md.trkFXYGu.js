import{_ as i,c as a,o as e,ag as n}from"./chunks/framework.BloHwijo.js";const o=JSON.parse('{"title":"Advanced Concepts","description":"","frontmatter":{},"headers":[{"level":2,"title":"Security Features","slug":"security-features","link":"#security-features","children":[]},{"level":2,"title":"Token Management","slug":"token-management","link":"#token-management","children":[]},{"level":2,"title":"Error Handling","slug":"error-handling","link":"#error-handling","children":[]},{"level":2,"title":"Quick References","slug":"quick-references","link":"#quick-references","children":[]}],"relativePath":"guide/advanced-concepts.md","filePath":"guide/advanced-concepts.md","lastUpdated":1746729009000}'),t={name:"guide/advanced-concepts.md"};function l(h,s,k,r,p,d){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="advanced-concepts" tabindex="-1">Advanced Concepts <a class="header-anchor" href="#advanced-concepts" aria-label="Permalink to &quot;Advanced Concepts&quot;">​</a></h1><p>Quick access to key concepts and features in Tokenly.</p><h2 id="security-features" tabindex="-1">Security Features <a class="header-anchor" href="#security-features" aria-label="Permalink to &quot;Security Features&quot;">​</a></h2><ul><li><a href="/tokenly/guide/security.html#device-management">Device Fingerprinting</a></li><li><a href="/tokenly/guide/security.html#token-rotation">Token Rotation</a></li><li><a href="/tokenly/guide/security.html#device-management">Multi-Device Support</a></li><li><a href="/tokenly/guide/security.html#session-management">Session Management</a></li></ul><h2 id="token-management" tabindex="-1">Token Management <a class="header-anchor" href="#token-management" aria-label="Permalink to &quot;Token Management&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> tokenly</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Tokenly</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  accessTokenExpiry: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;15m&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  refreshTokenExpiry: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;7d&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  securityConfig: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rotateRefreshToken: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    refreshTokenRotationInterval: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;24h&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="error-handling" tabindex="-1">Error Handling <a class="header-anchor" href="#error-handling" aria-label="Permalink to &quot;Error Handling&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> verified</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tokenly.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">verifyAccessToken</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(token)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (error) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (error </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">instanceof</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TokenlyError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    switch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (error.code) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      case</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;TOKEN_EXPIRED&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      case</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;TOKEN_INVALID&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      case</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;FINGERPRINT_MISMATCH&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Handle specific errors</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        break</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="quick-references" tabindex="-1">Quick References <a class="header-anchor" href="#quick-references" aria-label="Permalink to &quot;Quick References&quot;">​</a></h2><ul><li><a href="/tokenly/guide/getting-started.html#type-safety">Type Safety Guide</a></li><li><a href="/tokenly/guide/getting-started.html#configuration-options">Configuration Options</a></li><li><a href="/tokenly/guide/security.html#best-practices">Best Practices</a></li><li><a href="/tokenly/api/tokenly.html">API Reference</a></li></ul>`,10)]))}const E=i(t,[["render",l]]);export{o as __pageData,E as default};
