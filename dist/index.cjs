"use strict";var e=require("crypto"),t=require("jsonwebtoken");exports.Tokenly=class{constructor(t){this.currentToken=null,this.blacklistedTokens=new Set,this.deviceTokens=new Map,this.rotationCounts=new Map,this.revokedTokens=new Set,this.autoRotationInterval=null,this.fingerprintCache=new Map,this.instanceId=e.randomBytes(16).toString("hex"),this.secretAccess=process.env.JWT_SECRET_ACCESS||this.generateSecret("access"),this.secretRefresh=process.env.JWT_SECRET_REFRESH||this.generateSecret("refresh"),process.env.JWT_SECRET_ACCESS&&process.env.JWT_SECRET_REFRESH||console.warn("[33m%s[0m",`WARNING: Using auto-generated secrets. This is secure but tokens will be invalidated on server restart. \n        For production, please set JWT_SECRET_ACCESS and JWT_SECRET_REFRESH environment variables.\n        Instance ID: ${this.instanceId}`),this.accessTokenExpiry=t?.accessTokenExpiry||process.env.ACCESS_TOKEN_EXPIRY||"15m",this.refreshTokenExpiry=t?.refreshTokenExpiry||process.env.REFRESH_TOKEN_EXPIRY||"7d",this.cookieOptions={httpOnly:!0,secure:"production"===process.env.NODE_ENV,sameSite:"strict",path:"/",maxAge:6048e5,...t?.cookieOptions},this.jwtOptions={algorithm:"HS512",issuer:"tokenly-auth",audience:"tokenly-client",...t?.jwtOptions},this.verifyOptions={algorithms:[this.jwtOptions.algorithm],issuer:this.jwtOptions.issuer,audience:this.jwtOptions.audience,clockTolerance:30},this.rotationConfig={enableAutoRotation:!0,rotationInterval:60,maxRotationCount:100,...t?.rotationConfig},this.securityConfig={enableFingerprint:!0,enableBlacklist:!0,maxDevices:5,revokeOnSecurityBreach:!0,...t?.securityConfig},this.eventListeners=new Map,this.tokenCache=new Map}generateSecret(t){return e.createHash("sha256").update(`${this.instanceId}-${t}-${Date.now()}`).digest("hex")}formatDate(e){return new Date(1e3*e).toISOString()}decodeWithReadableDates(e,n){n||(n=t.decode(e));const{iat:r,exp:i,...o}=n;return{raw:e,payload:{...o,iat:r?this.formatDate(r):void 0,exp:i?this.formatDate(i):void 0}}}generateFingerprint(t){if(!t?.userAgent?.trim()||!t?.ip?.trim())throw new Error("Invalid or empty context values");const n=t.userAgent.trim().toLowerCase().replace(/\s+/g," "),r=t.ip.trim().toLowerCase().replace(/[^0-9.]/g,""),i=`ua=${e.createHash("sha256").update(`ua:${this.instanceId}:${n}`).digest("hex")}|ip=${e.createHash("sha256").update(`ip:${this.instanceId}:${r}`).digest("hex")}`;return e.createHash("sha256").update(i).digest("hex")}revokeToken(e){if(e)try{const n=t.decode(e);this.revokedTokens.add(e),this.emit("tokenRevoked",{token:e,userId:n?.userId,timestamp:Date.now()})}catch(e){console.error("Error al revocar token:",e)}}isTokenBlacklisted(e){return this.securityConfig.enableBlacklist&&this.blacklistedTokens.has(e)}validatePayload(e){if(null===e||"object"!=typeof e)throw new Error("Payload must be an object");if(0===Object.keys(e).length)throw new Error("Payload cannot be empty");if(!Object.prototype.hasOwnProperty.call(e,"userId"))throw new Error("Payload must contain a userId");if(null===e.userId||void 0===e.userId)throw new Error("userId cannot be null or undefined");if("string"!=typeof e.userId||!e.userId.trim())throw new Error("userId cannot be empty");Object.entries(e).forEach((([e,t])=>{if(null==t)throw new Error(`Payload property '${e}' cannot be null or undefined`)}));if(JSON.stringify(e).length>8192)throw new Error("Payload size exceeds maximum allowed size")}generateAccessToken(e,n,r){this.validatePayload(e);const i={...e};if(this.securityConfig.enableFingerprint&&r){const t=this.generateFingerprint(r),n=e.userId;this.handleDeviceStorage(n,t),i.fingerprint=t}const o=t.sign(i,this.secretAccess,{...this.jwtOptions,...n,expiresIn:this.accessTokenExpiry}),s=this.decodeWithReadableDates(o);return this.cacheToken(o,s),s}verifyAccessToken(e,n){if(this.revokedTokens.has(e)||this.isTokenBlacklisted(e))throw new Error("Token has been revoked");const r=t.verify(e,this.secretAccess,{...this.verifyOptions,ignoreExpiration:!1,clockTolerance:0});if(this.securityConfig.enableFingerprint&&n){const e=this.generateFingerprint(n);if(r.fingerprint&&r.fingerprint!==e)throw new Error("Invalid token fingerprint")}const i=this.decodeWithReadableDates(e,r);return this.cacheToken(e,i),i}generateRefreshToken(e,n){this.validatePayload(e);const r={...e};delete r.aud,delete r.iss,delete r.exp,delete r.iat;const i=t.sign(r,this.secretRefresh,{...this.jwtOptions,expiresIn:this.refreshTokenExpiry}),o=this.decodeWithReadableDates(i);return o.cookieConfig={name:"refresh_token",value:i,options:{...this.cookieOptions,...n}},o}verifyRefreshToken(e){const n=t.verify(e,this.secretRefresh,this.verifyOptions);return this.decodeWithReadableDates(e,n)}rotateTokens(e){if(!e||"string"!=typeof e)throw new Error("Invalid refresh token format");const t=this.verifyRefreshToken(e),{iat:n,exp:r,aud:i,iss:o,...s}=t.payload,a=e,c=this.rotationCounts.get(a)||0;if(c>=(this.rotationConfig.maxRotationCount||2))throw new Error("Maximum rotation count exceeded");return this.rotationCounts.set(a,c+1),{accessToken:this.generateAccessToken(s),refreshToken:this.generateRefreshToken(s)}}setToken(e){this.currentToken=e}getToken(){return this.currentToken}clearToken(){this.currentToken=null}isTokenExpiringSoon(e,n=5){try{const r=t.decode(e);if(!r||!r.exp)return!1;const i=1e3*r.exp,o=Date.now();return i-o<60*n*1e3}catch{return!1}}getTokenInfo(e){try{const n=t.decode(e);return n?{userId:n.userId,expiresAt:new Date(1e3*n.exp),issuedAt:new Date(1e3*n.iat),fingerprint:n.fingerprint}:null}catch{return null}}validateTokenFormat(e){try{const t=e.split(".");return 3===t.length&&t.every((e=>{try{return Buffer.from(e,"base64").toString(),!0}catch{return!1}}))}catch{return!1}}generateOneTimeToken(n,r="5m"){const i={purpose:n,nonce:e.randomBytes(16).toString("hex"),iat:Math.floor(Date.now()/1e3)};return t.sign(i,this.secretAccess,{expiresIn:r})}verifyRefreshTokenEnhanced(e){if(!this.validateTokenFormat(e))throw new Error("Invalid token format");const t=this.verifyRefreshToken(e);if(this.isTokenExpiringSoon(e,60))throw new Error("Refresh token is about to expire");return t}on(e,t){this.eventListeners.has(e)||this.eventListeners.set(e,[]),this.eventListeners.get(e)?.push(t)}emit(e,t){const n=this.eventListeners.get(e);n?.length&&n.forEach((e=>{try{e(t)}catch(e){}}))}cacheToken(e,t){this.tokenCache.set(e,t),setTimeout((()=>{this.tokenCache.delete(e)}),3e5)}analyzeTokenSecurity(e){const n=t.decode(e,{complete:!0});if(!n)throw new Error("Invalid token");return{algorithm:n.header.alg,hasFingerprint:!!n.payload.fingerprint,expirationTime:new Date(1e3*n.payload.exp),issuedAt:new Date(1e3*n.payload.iat),timeUntilExpiry:1e3*n.payload.exp-Date.now(),strength:this.calculateTokenStrength(n)}}calculateTokenStrength(e){let t=0;"HS512"===e.header.alg?t+=2:"HS256"===e.header.alg&&(t+=1),e.payload.fingerprint&&(t+=2);const n=1e3*e.payload.exp-Date.now();return n<9e5?t+=1:n<36e5&&(t+=2),t<=2?"weak":t<=4?"medium":"strong"}enableAutoRotation(e={}){console.log("Enabling auto rotation...");const{checkInterval:t=50,rotateBeforeExpiry:n=1e3}=e;return this.autoRotationInterval&&clearInterval(this.autoRotationInterval),this.checkTokensExpiration(n),this.autoRotationInterval=setInterval((()=>{this.checkTokensExpiration(n)}),t),this.autoRotationInterval}disableAutoRotation(){this.autoRotationInterval&&(clearInterval(this.autoRotationInterval),this.autoRotationInterval=null)}checkTokensExpiration(e){Array.from(this.tokenCache.entries()).forEach((([n,r])=>{try{const r=t.decode(n);if(r?.exp){const t=1e3*r.exp-Date.now();t<e&&this.emit("tokenExpiring",{token:n,userId:r.userId,expiresIn:t})}}catch(e){}}))}enableAutoCleanup(e=36e5){setInterval((()=>{const e=Date.now();this.revokedTokens.forEach((n=>{try{const r=t.decode(n);r&&r.exp&&1e3*r.exp<e&&this.revokedTokens.delete(n)}catch{this.revokedTokens.delete(n)}}))}),e)}handleDeviceStorage(e,t){this.deviceTokens.has(e)||this.deviceTokens.set(e,new Set);const n=this.deviceTokens.get(e),r=`${e}:${t}`;if(!this.fingerprintCache.has(r)){if(n.size>=this.securityConfig.maxDevices)throw new Error("Maximum number of devices reached");this.fingerprintCache.set(r,t)}n.add(t)}},exports.getClientIP=function(e,t){const n=e["x-real-ip"];if("string"==typeof n&&n.trim())return n.trim();const r=e["x-forwarded-for"];return"string"==typeof r&&r.trim()?r.split(",")[0].trim():t||""};
//# sourceMappingURL=index.cjs.map
